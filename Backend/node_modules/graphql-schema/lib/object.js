'use strict';

exports.__esModule = true;
var _bind = Function.prototype.bind;
exports['default'] = objectType;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; }

var _invariant = require('invariant');

var _invariant2 = _interopRequireDefault(_invariant);

var _baseObject = require('./baseObject');

var _baseObject2 = _interopRequireDefault(_baseObject);

var _graphql = require('graphql');

var Obj = (function (_BaseObject) {
  function Obj() {
    _classCallCheck(this, Obj);

    _BaseObject.apply(this, arguments);
  }

  _inherits(Obj, _BaseObject);

  Obj.prototype.resolve = function resolve(_resolve) {
    _invariant2['default'](this.__field, 'resolve(...): Resolve must appear under a field');

    this.__field.resolve = _resolve;
    return this;
  };

  Obj.prototype.end = function end() {
    return new _graphql.GraphQLObjectType(_BaseObject.prototype.end.call(this));
  };

  return Obj;
})(_baseObject2['default']);

function objectType() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return new (_bind.apply(Obj, [null].concat(args)))();
}

module.exports = exports['default'];
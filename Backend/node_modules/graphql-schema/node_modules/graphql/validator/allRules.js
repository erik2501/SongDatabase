
/**
 *  Copyright (c) 2015, Facebook, Inc.
 *  All rights reserved.
 *
 *  This source code is licensed under the BSD-style license found in the
 *  LICENSE file in the root directory of this source tree. An additional grant
 *  of patent rights can be found in the PATENTS file in the same directory.
 */

// Spec Section: Fragment Spread Type Existence
'use strict';

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _rulesKnownTypeNames = require('./rules/KnownTypeNames');

// Spec Section: Fragments on Composite Types

var _rulesKnownTypeNames2 = _interopRequireDefault(_rulesKnownTypeNames);

var _rulesFragmentsOnCompositeTypes = require('./rules/FragmentsOnCompositeTypes');

// Spec Section: Variables are Input Types

var _rulesFragmentsOnCompositeTypes2 = _interopRequireDefault(_rulesFragmentsOnCompositeTypes);

var _rulesVariablesAreInputTypes = require('./rules/VariablesAreInputTypes');

// Spec Section: "Leaf Field Selections"

var _rulesVariablesAreInputTypes2 = _interopRequireDefault(_rulesVariablesAreInputTypes);

var _rulesScalarLeafs = require('./rules/ScalarLeafs');

// Spec Section: "Field Selections on Objects, Interfaces, and Unions Types"

var _rulesScalarLeafs2 = _interopRequireDefault(_rulesScalarLeafs);

var _rulesFieldsOnCorrectType = require('./rules/FieldsOnCorrectType');

// Spec Section: "Fragment spread target defined"

var _rulesFieldsOnCorrectType2 = _interopRequireDefault(_rulesFieldsOnCorrectType);

var _rulesKnownFragmentNames = require('./rules/KnownFragmentNames');

// Spec Section: "Fragments must be used"

var _rulesKnownFragmentNames2 = _interopRequireDefault(_rulesKnownFragmentNames);

var _rulesNoUnusedFragments = require('./rules/NoUnusedFragments');

// Spec Section: "Fragment spread is possible"

var _rulesNoUnusedFragments2 = _interopRequireDefault(_rulesNoUnusedFragments);

var _rulesPossibleFragmentSpreads = require('./rules/PossibleFragmentSpreads');

// Spec Section: "Fragments must not form cycles"

var _rulesPossibleFragmentSpreads2 = _interopRequireDefault(_rulesPossibleFragmentSpreads);

var _rulesNoFragmentCycles = require('./rules/NoFragmentCycles');

// Spec Section: "All Variable Used Defined"

var _rulesNoFragmentCycles2 = _interopRequireDefault(_rulesNoFragmentCycles);

var _rulesNoUndefinedVariables = require('./rules/NoUndefinedVariables');

// Spec Section: "All Variables Used"

var _rulesNoUndefinedVariables2 = _interopRequireDefault(_rulesNoUndefinedVariables);

var _rulesNoUnusedVariables = require('./rules/NoUnusedVariables');

// Spec Section: "Directives Are Defined"

var _rulesNoUnusedVariables2 = _interopRequireDefault(_rulesNoUnusedVariables);

var _rulesKnownDirectives = require('./rules/KnownDirectives');

// Spec Section: "Argument Names"

var _rulesKnownDirectives2 = _interopRequireDefault(_rulesKnownDirectives);

var _rulesKnownArgumentNames = require('./rules/KnownArgumentNames');

// Spec Section: "Argument Values Type Correctness"

var _rulesKnownArgumentNames2 = _interopRequireDefault(_rulesKnownArgumentNames);

var _rulesArgumentsOfCorrectType = require('./rules/ArgumentsOfCorrectType');

// Spec Section: "Argument Optionality"

var _rulesArgumentsOfCorrectType2 = _interopRequireDefault(_rulesArgumentsOfCorrectType);

var _rulesProvidedNonNullArguments = require('./rules/ProvidedNonNullArguments');

// Spec Section: "Variable Default Values Are Correctly Typed"

var _rulesProvidedNonNullArguments2 = _interopRequireDefault(_rulesProvidedNonNullArguments);

var _rulesDefaultValuesOfCorrectType = require('./rules/DefaultValuesOfCorrectType');

// Spec Section: "All Variable Usages Are Allowed"

var _rulesDefaultValuesOfCorrectType2 = _interopRequireDefault(_rulesDefaultValuesOfCorrectType);

var _rulesVariablesInAllowedPosition = require('./rules/VariablesInAllowedPosition');

// Spec Section: "Field Selection Merging"

var _rulesVariablesInAllowedPosition2 = _interopRequireDefault(_rulesVariablesInAllowedPosition);

var _rulesOverlappingFieldsCanBeMerged = require('./rules/OverlappingFieldsCanBeMerged');

/**
 * This default set of rules includes all validation rules defined by the
 * GraphQL spec. The order of these rules is important as errors encountered in
 * earlier rules will skip later rules, leading to less noise in error output.
 */

var _rulesOverlappingFieldsCanBeMerged2 = _interopRequireDefault(_rulesOverlappingFieldsCanBeMerged);

var allRules = [_rulesKnownTypeNames2['default'], _rulesFragmentsOnCompositeTypes2['default'], _rulesVariablesAreInputTypes2['default'], _rulesScalarLeafs2['default'], _rulesFieldsOnCorrectType2['default'], _rulesKnownFragmentNames2['default'], _rulesNoUnusedFragments2['default'], _rulesPossibleFragmentSpreads2['default'], _rulesNoFragmentCycles2['default'], _rulesNoUndefinedVariables2['default'], _rulesNoUnusedVariables2['default'], _rulesKnownDirectives2['default'], _rulesKnownArgumentNames2['default'], _rulesArgumentsOfCorrectType2['default'], _rulesProvidedNonNullArguments2['default'], _rulesDefaultValuesOfCorrectType2['default'], _rulesVariablesInAllowedPosition2['default'], _rulesOverlappingFieldsCanBeMerged2['default']];
exports.allRules = allRules;
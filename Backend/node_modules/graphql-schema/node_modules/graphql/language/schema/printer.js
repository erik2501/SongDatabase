/**
 *  Copyright (c) 2015, Facebook, Inc.
 *  All rights reserved.
 *
 *  This source code is licensed under the BSD-style license found in the
 *  LICENSE file in the root directory of this source tree. An additional grant
 *  of patent rights can be found in the PATENTS file in the same directory.
 */

'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports.getIntrospectionResult = getIntrospectionResult;

var _parser = require('./parser');

var _materializer = require('./materializer');

var _typeIntrospectionQuery = require('./../../type/introspectionQuery');

var _ = require('../../');

function getIntrospectionResult(body, queryType) {
  var doc, schema;
  return _regeneratorRuntime.async(function getIntrospectionResult$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        doc = (0, _parser.parseSchema)(body);
        schema = (0, _materializer.materializeSchema)(doc, queryType);
        context$1$0.next = 4;
        return _regeneratorRuntime.awrap((0, _.graphql)(schema, _typeIntrospectionQuery.introspectionQuery));

      case 4:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 5:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}